{
  "desc": {
    "parameters": [
      {
        "type": "ParameterTypeNumber",
        "index": 0,
        "name": "amp",
        "paramId": "amp",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.8,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 1,
        "name": "swarm_amp",
        "paramId": "swarm_amp",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 1,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 2,
        "name": "flock_amp",
        "paramId": "flock_amp",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.9,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 3,
        "name": "wind_amp",
        "paramId": "wind_amp",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.85,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 4,
        "name": "mammal_amp",
        "paramId": "mammal_amp",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.65,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 5,
        "name": "river_amp",
        "paramId": "river_amp",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.65,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      },
      {
        "type": "ParameterTypeNumber",
        "index": 6,
        "name": "room_amp",
        "paramId": "room_amp",
        "minimum": 0,
        "maximum": 1,
        "exponent": 1,
        "steps": 0,
        "initialValue": 0.61,
        "isEnum": false,
        "enumValues": [],
        "displayName": "",
        "unit": "",
        "order": 0,
        "debug": false,
        "visible": true,
        "signalIndex": null,
        "ioType": "IOTypeUndefined"
      }
    ],
    "numParameters": 7,
    "numSignalInParameters": 0,
    "numSignalOutParameters": 0,
    "numInputChannels": 0,
    "numOutputChannels": 2,
    "numMidiInputPorts": 0,
    "numMidiOutputPorts": 0,
    "transportUsed": true,
    "externalDataRefs": [
      {
        "id": "grain",
        "type": "Float32Buffer",
        "tag": "buffer~"
      },
      {
        "id": "window",
        "type": "Float32Buffer",
        "tag": "buffer~"
      }
    ],
    "patcherSerial": 0,
    "inports": [
      {
        "tag": "in1",
        "meta": ""
      }
    ],
    "outports": [
      {
        "tag": "out3",
        "meta": ""
      },
      {
        "tag": "out4",
        "meta": ""
      },
      {
        "tag": "out5",
        "meta": ""
      },
      {
        "tag": "out6",
        "meta": ""
      },
      {
        "tag": "out7",
        "meta": ""
      }
    ],
    "inlets": [
      {
        "type": "event",
        "index": 1,
        "tag": "in1",
        "meta": "",
        "comment": "on/off"
      }
    ],
    "outlets": [
      {
        "type": "signal",
        "index": 1,
        "tag": "out1",
        "meta": "",
        "comment": "left channel"
      },
      {
        "type": "signal",
        "index": 2,
        "tag": "out2",
        "meta": "",
        "comment": "right channel"
      },
      {
        "type": "event",
        "index": 3,
        "tag": "out3",
        "meta": "",
        "comment": "swarm positions"
      },
      {
        "type": "event",
        "index": 4,
        "tag": "out4",
        "meta": "",
        "comment": "flock positions"
      },
      {
        "type": "event",
        "index": 5,
        "tag": "out5",
        "meta": "",
        "comment": "wind positions"
      },
      {
        "type": "event",
        "index": 6,
        "tag": "out6",
        "meta": "",
        "comment": "mammal position"
      },
      {
        "type": "event",
        "index": 7,
        "tag": "out7",
        "meta": "",
        "comment": "river position"
      }
    ],
    "paramConversion": {
      "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
      "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    case 0:\r\n    case 1:\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n    case 5:\r\n    case 6:\r\n        {\r\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n            let normalizedValue = (value - 0) / (1 - 0);\r\n            return normalizedValue;\r\n        }\r\n    default:\r\n        index -= 7;\r\n\r\n        if (index < this.p_62.getNumParameters())\r\n            return this.p_62.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_62.getNumParameters();\r\n\r\n        if (index < this.p_63.getNumParameters())\r\n            return this.p_63.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_63.getNumParameters();\r\n\r\n        if (index < this.p_64.getNumParameters())\r\n            return this.p_64.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_64.getNumParameters();\r\n\r\n        if (index < this.p_65.getNumParameters())\r\n            return this.p_65.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_65.getNumParameters();\r\n\r\n        if (index < this.p_66.getNumParameters())\r\n            return this.p_66.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_66.getNumParameters();\r\n\r\n        if (index < this.p_67.getNumParameters())\r\n            return this.p_67.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_67.getNumParameters();\r\n\r\n        if (index < this.p_68.getNumParameters())\r\n            return this.p_68.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_68.getNumParameters();\r\n\r\n        if (index < this.p_69.getNumParameters())\r\n            return this.p_69.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
      "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    case 0:\r\n    case 1:\r\n    case 2:\r\n    case 3:\r\n    case 4:\r\n    case 5:\r\n    case 6:\r\n        {\r\n            {\r\n                return 0 + value * (1 - 0);\r\n            }\r\n        }\r\n    default:\r\n        index -= 7;\r\n\r\n        if (index < this.p_62.getNumParameters())\r\n            return this.p_62.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_62.getNumParameters();\r\n\r\n        if (index < this.p_63.getNumParameters())\r\n            return this.p_63.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_63.getNumParameters();\r\n\r\n        if (index < this.p_64.getNumParameters())\r\n            return this.p_64.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_64.getNumParameters();\r\n\r\n        if (index < this.p_65.getNumParameters())\r\n            return this.p_65.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_65.getNumParameters();\r\n\r\n        if (index < this.p_66.getNumParameters())\r\n            return this.p_66.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_66.getNumParameters();\r\n\r\n        if (index < this.p_67.getNumParameters())\r\n            return this.p_67.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_67.getNumParameters();\r\n\r\n        if (index < this.p_68.getNumParameters())\r\n            return this.p_68.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_68.getNumParameters();\r\n\r\n        if (index < this.p_69.getNumParameters())\r\n            return this.p_69.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
      "getNumParameters": "function getNumParameters() {\r\n    return 7 + this.p_62.getNumParameters() + this.p_63.getNumParameters() + this.p_64.getNumParameters() + this.p_65.getNumParameters() + this.p_66.getNumParameters() + this.p_67.getNumParameters() + this.p_68.getNumParameters() + this.p_69.getNumParameters();\r\n}",
      "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    case 0:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 1:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 2:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 3:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 4:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 5:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    case 6:\r\n        {\r\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\r\n            return v;\r\n        }\r\n    default:\r\n        index -= 7;\r\n\r\n        if (index < this.p_62.getNumParameters())\r\n            return this.p_62.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_62.getNumParameters();\r\n\r\n        if (index < this.p_63.getNumParameters())\r\n            return this.p_63.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_63.getNumParameters();\r\n\r\n        if (index < this.p_64.getNumParameters())\r\n            return this.p_64.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_64.getNumParameters();\r\n\r\n        if (index < this.p_65.getNumParameters())\r\n            return this.p_65.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_65.getNumParameters();\r\n\r\n        if (index < this.p_66.getNumParameters())\r\n            return this.p_66.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_66.getNumParameters();\r\n\r\n        if (index < this.p_67.getNumParameters())\r\n            return this.p_67.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_67.getNumParameters();\r\n\r\n        if (index < this.p_68.getNumParameters())\r\n            return this.p_68.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_68.getNumParameters();\r\n\r\n        if (index < this.p_69.getNumParameters())\r\n            return this.p_69.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
      "subpatches": {
        "p_62": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_02.getNumParameters())\r\n            return this.p_02.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_02.getNumParameters();\r\n\r\n        if (index < this.p_03.getNumParameters())\r\n            return this.p_03.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_03.getNumParameters();\r\n\r\n        if (index < this.p_04.getNumParameters())\r\n            return this.p_04.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_04.getNumParameters();\r\n\r\n        if (index < this.p_05.getNumParameters())\r\n            return this.p_05.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_05.getNumParameters();\r\n\r\n        if (index < this.p_06.getNumParameters())\r\n            return this.p_06.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_06.getNumParameters();\r\n\r\n        if (index < this.p_07.getNumParameters())\r\n            return this.p_07.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_07.getNumParameters();\r\n\r\n        if (index < this.p_08.getNumParameters())\r\n            return this.p_08.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_08.getNumParameters();\r\n\r\n        if (index < this.p_09.getNumParameters())\r\n            return this.p_09.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_09.getNumParameters();\r\n\r\n        if (index < this.p_10.getNumParameters())\r\n            return this.p_10.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_10.getNumParameters();\r\n\r\n        if (index < this.p_11.getNumParameters())\r\n            return this.p_11.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_11.getNumParameters();\r\n\r\n        if (index < this.p_12.getNumParameters())\r\n            return this.p_12.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_12.getNumParameters();\r\n\r\n        if (index < this.p_13.getNumParameters())\r\n            return this.p_13.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_13.getNumParameters();\r\n\r\n        if (index < this.p_14.getNumParameters())\r\n            return this.p_14.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_14.getNumParameters();\r\n\r\n        if (index < this.p_15.getNumParameters())\r\n            return this.p_15.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_15.getNumParameters();\r\n\r\n        if (index < this.p_16.getNumParameters())\r\n            return this.p_16.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_16.getNumParameters();\r\n\r\n        if (index < this.p_17.getNumParameters())\r\n            return this.p_17.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_17.getNumParameters();\r\n\r\n        if (index < this.p_18.getNumParameters())\r\n            return this.p_18.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_02.getNumParameters())\r\n            return this.p_02.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_02.getNumParameters();\r\n\r\n        if (index < this.p_03.getNumParameters())\r\n            return this.p_03.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_03.getNumParameters();\r\n\r\n        if (index < this.p_04.getNumParameters())\r\n            return this.p_04.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_04.getNumParameters();\r\n\r\n        if (index < this.p_05.getNumParameters())\r\n            return this.p_05.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_05.getNumParameters();\r\n\r\n        if (index < this.p_06.getNumParameters())\r\n            return this.p_06.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_06.getNumParameters();\r\n\r\n        if (index < this.p_07.getNumParameters())\r\n            return this.p_07.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_07.getNumParameters();\r\n\r\n        if (index < this.p_08.getNumParameters())\r\n            return this.p_08.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_08.getNumParameters();\r\n\r\n        if (index < this.p_09.getNumParameters())\r\n            return this.p_09.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_09.getNumParameters();\r\n\r\n        if (index < this.p_10.getNumParameters())\r\n            return this.p_10.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_10.getNumParameters();\r\n\r\n        if (index < this.p_11.getNumParameters())\r\n            return this.p_11.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_11.getNumParameters();\r\n\r\n        if (index < this.p_12.getNumParameters())\r\n            return this.p_12.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_12.getNumParameters();\r\n\r\n        if (index < this.p_13.getNumParameters())\r\n            return this.p_13.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_13.getNumParameters();\r\n\r\n        if (index < this.p_14.getNumParameters())\r\n            return this.p_14.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_14.getNumParameters();\r\n\r\n        if (index < this.p_15.getNumParameters())\r\n            return this.p_15.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_15.getNumParameters();\r\n\r\n        if (index < this.p_16.getNumParameters())\r\n            return this.p_16.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_16.getNumParameters();\r\n\r\n        if (index < this.p_17.getNumParameters())\r\n            return this.p_17.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_17.getNumParameters();\r\n\r\n        if (index < this.p_18.getNumParameters())\r\n            return this.p_18.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_02.getNumParameters() + this.p_03.getNumParameters() + this.p_04.getNumParameters() + this.p_05.getNumParameters() + this.p_06.getNumParameters() + this.p_07.getNumParameters() + this.p_08.getNumParameters() + this.p_09.getNumParameters() + this.p_10.getNumParameters() + this.p_11.getNumParameters() + this.p_12.getNumParameters() + this.p_13.getNumParameters() + this.p_14.getNumParameters() + this.p_15.getNumParameters() + this.p_16.getNumParameters() + this.p_17.getNumParameters() + this.p_18.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_02.getNumParameters())\r\n            return this.p_02.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_02.getNumParameters();\r\n\r\n        if (index < this.p_03.getNumParameters())\r\n            return this.p_03.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_03.getNumParameters();\r\n\r\n        if (index < this.p_04.getNumParameters())\r\n            return this.p_04.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_04.getNumParameters();\r\n\r\n        if (index < this.p_05.getNumParameters())\r\n            return this.p_05.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_05.getNumParameters();\r\n\r\n        if (index < this.p_06.getNumParameters())\r\n            return this.p_06.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_06.getNumParameters();\r\n\r\n        if (index < this.p_07.getNumParameters())\r\n            return this.p_07.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_07.getNumParameters();\r\n\r\n        if (index < this.p_08.getNumParameters())\r\n            return this.p_08.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_08.getNumParameters();\r\n\r\n        if (index < this.p_09.getNumParameters())\r\n            return this.p_09.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_09.getNumParameters();\r\n\r\n        if (index < this.p_10.getNumParameters())\r\n            return this.p_10.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_10.getNumParameters();\r\n\r\n        if (index < this.p_11.getNumParameters())\r\n            return this.p_11.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_11.getNumParameters();\r\n\r\n        if (index < this.p_12.getNumParameters())\r\n            return this.p_12.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_12.getNumParameters();\r\n\r\n        if (index < this.p_13.getNumParameters())\r\n            return this.p_13.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_13.getNumParameters();\r\n\r\n        if (index < this.p_14.getNumParameters())\r\n            return this.p_14.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_14.getNumParameters();\r\n\r\n        if (index < this.p_15.getNumParameters())\r\n            return this.p_15.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_15.getNumParameters();\r\n\r\n        if (index < this.p_16.getNumParameters())\r\n            return this.p_16.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_16.getNumParameters();\r\n\r\n        if (index < this.p_17.getNumParameters())\r\n            return this.p_17.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_17.getNumParameters();\r\n\r\n        if (index < this.p_18.getNumParameters())\r\n            return this.p_18.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_02": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_01.getNumParameters())\r\n            return this.p_01.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_01.getNumParameters())\r\n            return this.p_01.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_01.getNumParameters();\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_01.getNumParameters())\r\n            return this.p_01.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "subpatches": {
                "p_01": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_03": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_04": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_05": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_06": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_07": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_08": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_09": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_10": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_11": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_12": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_13": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_14": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_15": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_16": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_17": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_18": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_63": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_19.getNumParameters())\r\n            return this.p_19.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_19.getNumParameters())\r\n            return this.p_19.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_19.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_19.getNumParameters())\r\n            return this.p_19.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_19": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_64": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_21.getNumParameters())\r\n            return this.p_21.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_21.getNumParameters();\r\n\r\n        if (index < this.p_22.getNumParameters())\r\n            return this.p_22.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_22.getNumParameters();\r\n\r\n        if (index < this.p_23.getNumParameters())\r\n            return this.p_23.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_23.getNumParameters();\r\n\r\n        if (index < this.p_24.getNumParameters())\r\n            return this.p_24.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_24.getNumParameters();\r\n\r\n        if (index < this.p_25.getNumParameters())\r\n            return this.p_25.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_25.getNumParameters();\r\n\r\n        if (index < this.p_26.getNumParameters())\r\n            return this.p_26.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_26.getNumParameters();\r\n\r\n        if (index < this.p_27.getNumParameters())\r\n            return this.p_27.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_27.getNumParameters();\r\n\r\n        if (index < this.p_28.getNumParameters())\r\n            return this.p_28.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_28.getNumParameters();\r\n\r\n        if (index < this.p_29.getNumParameters())\r\n            return this.p_29.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_29.getNumParameters();\r\n\r\n        if (index < this.p_30.getNumParameters())\r\n            return this.p_30.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_30.getNumParameters();\r\n\r\n        if (index < this.p_31.getNumParameters())\r\n            return this.p_31.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_31.getNumParameters();\r\n\r\n        if (index < this.p_32.getNumParameters())\r\n            return this.p_32.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_32.getNumParameters();\r\n\r\n        if (index < this.p_33.getNumParameters())\r\n            return this.p_33.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_33.getNumParameters();\r\n\r\n        if (index < this.p_34.getNumParameters())\r\n            return this.p_34.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_34.getNumParameters();\r\n\r\n        if (index < this.p_35.getNumParameters())\r\n            return this.p_35.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_35.getNumParameters();\r\n\r\n        if (index < this.p_36.getNumParameters())\r\n            return this.p_36.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_36.getNumParameters();\r\n\r\n        if (index < this.p_37.getNumParameters())\r\n            return this.p_37.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_21.getNumParameters())\r\n            return this.p_21.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_21.getNumParameters();\r\n\r\n        if (index < this.p_22.getNumParameters())\r\n            return this.p_22.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_22.getNumParameters();\r\n\r\n        if (index < this.p_23.getNumParameters())\r\n            return this.p_23.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_23.getNumParameters();\r\n\r\n        if (index < this.p_24.getNumParameters())\r\n            return this.p_24.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_24.getNumParameters();\r\n\r\n        if (index < this.p_25.getNumParameters())\r\n            return this.p_25.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_25.getNumParameters();\r\n\r\n        if (index < this.p_26.getNumParameters())\r\n            return this.p_26.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_26.getNumParameters();\r\n\r\n        if (index < this.p_27.getNumParameters())\r\n            return this.p_27.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_27.getNumParameters();\r\n\r\n        if (index < this.p_28.getNumParameters())\r\n            return this.p_28.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_28.getNumParameters();\r\n\r\n        if (index < this.p_29.getNumParameters())\r\n            return this.p_29.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_29.getNumParameters();\r\n\r\n        if (index < this.p_30.getNumParameters())\r\n            return this.p_30.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_30.getNumParameters();\r\n\r\n        if (index < this.p_31.getNumParameters())\r\n            return this.p_31.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_31.getNumParameters();\r\n\r\n        if (index < this.p_32.getNumParameters())\r\n            return this.p_32.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_32.getNumParameters();\r\n\r\n        if (index < this.p_33.getNumParameters())\r\n            return this.p_33.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_33.getNumParameters();\r\n\r\n        if (index < this.p_34.getNumParameters())\r\n            return this.p_34.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_34.getNumParameters();\r\n\r\n        if (index < this.p_35.getNumParameters())\r\n            return this.p_35.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_35.getNumParameters();\r\n\r\n        if (index < this.p_36.getNumParameters())\r\n            return this.p_36.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_36.getNumParameters();\r\n\r\n        if (index < this.p_37.getNumParameters())\r\n            return this.p_37.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_21.getNumParameters() + this.p_22.getNumParameters() + this.p_23.getNumParameters() + this.p_24.getNumParameters() + this.p_25.getNumParameters() + this.p_26.getNumParameters() + this.p_27.getNumParameters() + this.p_28.getNumParameters() + this.p_29.getNumParameters() + this.p_30.getNumParameters() + this.p_31.getNumParameters() + this.p_32.getNumParameters() + this.p_33.getNumParameters() + this.p_34.getNumParameters() + this.p_35.getNumParameters() + this.p_36.getNumParameters() + this.p_37.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_21.getNumParameters())\r\n            return this.p_21.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_21.getNumParameters();\r\n\r\n        if (index < this.p_22.getNumParameters())\r\n            return this.p_22.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_22.getNumParameters();\r\n\r\n        if (index < this.p_23.getNumParameters())\r\n            return this.p_23.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_23.getNumParameters();\r\n\r\n        if (index < this.p_24.getNumParameters())\r\n            return this.p_24.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_24.getNumParameters();\r\n\r\n        if (index < this.p_25.getNumParameters())\r\n            return this.p_25.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_25.getNumParameters();\r\n\r\n        if (index < this.p_26.getNumParameters())\r\n            return this.p_26.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_26.getNumParameters();\r\n\r\n        if (index < this.p_27.getNumParameters())\r\n            return this.p_27.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_27.getNumParameters();\r\n\r\n        if (index < this.p_28.getNumParameters())\r\n            return this.p_28.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_28.getNumParameters();\r\n\r\n        if (index < this.p_29.getNumParameters())\r\n            return this.p_29.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_29.getNumParameters();\r\n\r\n        if (index < this.p_30.getNumParameters())\r\n            return this.p_30.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_30.getNumParameters();\r\n\r\n        if (index < this.p_31.getNumParameters())\r\n            return this.p_31.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_31.getNumParameters();\r\n\r\n        if (index < this.p_32.getNumParameters())\r\n            return this.p_32.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_32.getNumParameters();\r\n\r\n        if (index < this.p_33.getNumParameters())\r\n            return this.p_33.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_33.getNumParameters();\r\n\r\n        if (index < this.p_34.getNumParameters())\r\n            return this.p_34.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_34.getNumParameters();\r\n\r\n        if (index < this.p_35.getNumParameters())\r\n            return this.p_35.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_35.getNumParameters();\r\n\r\n        if (index < this.p_36.getNumParameters())\r\n            return this.p_36.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_36.getNumParameters();\r\n\r\n        if (index < this.p_37.getNumParameters())\r\n            return this.p_37.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_21": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_20.getNumParameters())\r\n            return this.p_20.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_20.getNumParameters())\r\n            return this.p_20.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_20.getNumParameters();\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_20.getNumParameters())\r\n            return this.p_20.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
              "subpatches": {
                "p_20": {
                  "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
                  "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
                  "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
                  "subpatches": {},
                  "isPolyphonic": false
                }
              },
              "isPolyphonic": false
            },
            "p_22": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_23": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_24": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_25": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_26": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_27": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_28": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_29": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_30": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_31": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_32": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_33": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_34": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_35": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_36": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_37": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_65": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_38.getNumParameters())\r\n            return this.p_38.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_38.getNumParameters();\r\n\r\n        if (index < this.p_39.getNumParameters())\r\n            return this.p_39.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_39.getNumParameters();\r\n\r\n        if (index < this.p_40.getNumParameters())\r\n            return this.p_40.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_40.getNumParameters();\r\n\r\n        if (index < this.p_41.getNumParameters())\r\n            return this.p_41.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_41.getNumParameters();\r\n\r\n        if (index < this.p_42.getNumParameters())\r\n            return this.p_42.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_42.getNumParameters();\r\n\r\n        if (index < this.p_43.getNumParameters())\r\n            return this.p_43.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_43.getNumParameters();\r\n\r\n        if (index < this.p_44.getNumParameters())\r\n            return this.p_44.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_44.getNumParameters();\r\n\r\n        if (index < this.p_45.getNumParameters())\r\n            return this.p_45.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_45.getNumParameters();\r\n\r\n        if (index < this.p_46.getNumParameters())\r\n            return this.p_46.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_46.getNumParameters();\r\n\r\n        if (index < this.p_47.getNumParameters())\r\n            return this.p_47.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_47.getNumParameters();\r\n\r\n        if (index < this.p_48.getNumParameters())\r\n            return this.p_48.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_38.getNumParameters())\r\n            return this.p_38.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_38.getNumParameters();\r\n\r\n        if (index < this.p_39.getNumParameters())\r\n            return this.p_39.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_39.getNumParameters();\r\n\r\n        if (index < this.p_40.getNumParameters())\r\n            return this.p_40.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_40.getNumParameters();\r\n\r\n        if (index < this.p_41.getNumParameters())\r\n            return this.p_41.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_41.getNumParameters();\r\n\r\n        if (index < this.p_42.getNumParameters())\r\n            return this.p_42.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_42.getNumParameters();\r\n\r\n        if (index < this.p_43.getNumParameters())\r\n            return this.p_43.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_43.getNumParameters();\r\n\r\n        if (index < this.p_44.getNumParameters())\r\n            return this.p_44.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_44.getNumParameters();\r\n\r\n        if (index < this.p_45.getNumParameters())\r\n            return this.p_45.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_45.getNumParameters();\r\n\r\n        if (index < this.p_46.getNumParameters())\r\n            return this.p_46.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_46.getNumParameters();\r\n\r\n        if (index < this.p_47.getNumParameters())\r\n            return this.p_47.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_47.getNumParameters();\r\n\r\n        if (index < this.p_48.getNumParameters())\r\n            return this.p_48.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_38.getNumParameters() + this.p_39.getNumParameters() + this.p_40.getNumParameters() + this.p_41.getNumParameters() + this.p_42.getNumParameters() + this.p_43.getNumParameters() + this.p_44.getNumParameters() + this.p_45.getNumParameters() + this.p_46.getNumParameters() + this.p_47.getNumParameters() + this.p_48.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_38.getNumParameters())\r\n            return this.p_38.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_38.getNumParameters();\r\n\r\n        if (index < this.p_39.getNumParameters())\r\n            return this.p_39.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_39.getNumParameters();\r\n\r\n        if (index < this.p_40.getNumParameters())\r\n            return this.p_40.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_40.getNumParameters();\r\n\r\n        if (index < this.p_41.getNumParameters())\r\n            return this.p_41.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_41.getNumParameters();\r\n\r\n        if (index < this.p_42.getNumParameters())\r\n            return this.p_42.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_42.getNumParameters();\r\n\r\n        if (index < this.p_43.getNumParameters())\r\n            return this.p_43.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_43.getNumParameters();\r\n\r\n        if (index < this.p_44.getNumParameters())\r\n            return this.p_44.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_44.getNumParameters();\r\n\r\n        if (index < this.p_45.getNumParameters())\r\n            return this.p_45.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_45.getNumParameters();\r\n\r\n        if (index < this.p_46.getNumParameters())\r\n            return this.p_46.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_46.getNumParameters();\r\n\r\n        if (index < this.p_47.getNumParameters())\r\n            return this.p_47.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_47.getNumParameters();\r\n\r\n        if (index < this.p_48.getNumParameters())\r\n            return this.p_48.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_38": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_39": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_40": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_41": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_42": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_43": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_44": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_45": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_46": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_47": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_48": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_66": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_49.getNumParameters())\r\n            return this.p_49.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_49.getNumParameters())\r\n            return this.p_49.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_49.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_49.getNumParameters())\r\n            return this.p_49.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_49": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_67": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_50.getNumParameters())\r\n            return this.p_50.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_50.getNumParameters())\r\n            return this.p_50.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_50.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_50.getNumParameters())\r\n            return this.p_50.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_50": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_68": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_51.getNumParameters())\r\n            return this.p_51.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_51.getNumParameters();\r\n\r\n        if (index < this.p_52.getNumParameters())\r\n            return this.p_52.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_52.getNumParameters();\r\n\r\n        if (index < this.p_53.getNumParameters())\r\n            return this.p_53.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_53.getNumParameters();\r\n\r\n        if (index < this.p_54.getNumParameters())\r\n            return this.p_54.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_54.getNumParameters();\r\n\r\n        if (index < this.p_55.getNumParameters())\r\n            return this.p_55.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_55.getNumParameters();\r\n\r\n        if (index < this.p_56.getNumParameters())\r\n            return this.p_56.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_56.getNumParameters();\r\n\r\n        if (index < this.p_57.getNumParameters())\r\n            return this.p_57.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_57.getNumParameters();\r\n\r\n        if (index < this.p_58.getNumParameters())\r\n            return this.p_58.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_58.getNumParameters();\r\n\r\n        if (index < this.p_59.getNumParameters())\r\n            return this.p_59.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_51.getNumParameters())\r\n            return this.p_51.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_51.getNumParameters();\r\n\r\n        if (index < this.p_52.getNumParameters())\r\n            return this.p_52.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_52.getNumParameters();\r\n\r\n        if (index < this.p_53.getNumParameters())\r\n            return this.p_53.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_53.getNumParameters();\r\n\r\n        if (index < this.p_54.getNumParameters())\r\n            return this.p_54.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_54.getNumParameters();\r\n\r\n        if (index < this.p_55.getNumParameters())\r\n            return this.p_55.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_55.getNumParameters();\r\n\r\n        if (index < this.p_56.getNumParameters())\r\n            return this.p_56.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_56.getNumParameters();\r\n\r\n        if (index < this.p_57.getNumParameters())\r\n            return this.p_57.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_57.getNumParameters();\r\n\r\n        if (index < this.p_58.getNumParameters())\r\n            return this.p_58.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_58.getNumParameters();\r\n\r\n        if (index < this.p_59.getNumParameters())\r\n            return this.p_59.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_51.getNumParameters() + this.p_52.getNumParameters() + this.p_53.getNumParameters() + this.p_54.getNumParameters() + this.p_55.getNumParameters() + this.p_56.getNumParameters() + this.p_57.getNumParameters() + this.p_58.getNumParameters() + this.p_59.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_51.getNumParameters())\r\n            return this.p_51.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_51.getNumParameters();\r\n\r\n        if (index < this.p_52.getNumParameters())\r\n            return this.p_52.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_52.getNumParameters();\r\n\r\n        if (index < this.p_53.getNumParameters())\r\n            return this.p_53.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_53.getNumParameters();\r\n\r\n        if (index < this.p_54.getNumParameters())\r\n            return this.p_54.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_54.getNumParameters();\r\n\r\n        if (index < this.p_55.getNumParameters())\r\n            return this.p_55.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_55.getNumParameters();\r\n\r\n        if (index < this.p_56.getNumParameters())\r\n            return this.p_56.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_56.getNumParameters();\r\n\r\n        if (index < this.p_57.getNumParameters())\r\n            return this.p_57.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_57.getNumParameters();\r\n\r\n        if (index < this.p_58.getNumParameters())\r\n            return this.p_58.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_58.getNumParameters();\r\n\r\n        if (index < this.p_59.getNumParameters())\r\n            return this.p_59.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_51": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_52": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_53": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_54": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_55": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_56": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_57": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_58": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_59": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        },
        "p_69": {
          "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
          "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_60.getNumParameters())\r\n            return this.p_60.convertToNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_60.getNumParameters();\r\n\r\n        if (index < this.p_61.getNumParameters())\r\n            return this.p_61.convertToNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_60.getNumParameters())\r\n            return this.p_60.convertFromNormalizedParameterValue(index, value);\r\n\r\n        index -= this.p_60.getNumParameters();\r\n\r\n        if (index < this.p_61.getNumParameters())\r\n            return this.p_61.convertFromNormalizedParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "getNumParameters": "function getNumParameters() {\r\n    return 0 + this.p_60.getNumParameters() + this.p_61.getNumParameters();\r\n}",
          "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        index -= 0;\r\n\r\n        if (index < this.p_60.getNumParameters())\r\n            return this.p_60.constrainParameterValue(index, value);\r\n\r\n        index -= this.p_60.getNumParameters();\r\n\r\n        if (index < this.p_61.getNumParameters())\r\n            return this.p_61.constrainParameterValue(index, value);\r\n\r\n        return value;\r\n    }\r\n}",
          "subpatches": {
            "p_60": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            },
            "p_61": {
              "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\r\n    if (steps == 1) {\r\n        if (normalizedValue > 0) {\r\n            normalizedValue = 1.;\r\n        }\r\n    } else {\r\n        let oneStep = 1. / (steps - 1);\r\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\r\n        normalizedValue = numberOfSteps * oneStep;\r\n    }\r\n\r\n    return normalizedValue;\r\n}",
              "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\r\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "getNumParameters": "function getNumParameters() {\r\n    return 0;\r\n}",
              "constrainParameterValue": "function constrainParameterValue(index, value) {\r\n    var v = value;\r\n\r\n    switch (index) {\r\n    default:\r\n        return value;\r\n    }\r\n}",
              "subpatches": {},
              "isPolyphonic": false
            }
          },
          "isPolyphonic": false
        }
      },
      "isPolyphonic": false
    },
    "presetid": "rnbo",
    "meta": {
      "architecture": "x64",
      "filename": "master.maxpat",
      "rnboobjname": "rnbomatic",
      "maxversion": "8.6.4",
      "rnboversion": "1.3.2",
      "name": "untitled"
    }
  },
  "presets": [
    {
      "name": "untitled",
      "preset": {
        "__sps": {
          "flock": {
            "__sps": {
              "main_bird": {},
              "panning": {},
              "panning[1]": {},
              "panning[2]": {},
              "panning[3]": {},
              "panning[4]": {},
              "positioning": {},
              "sub": {},
              "sub[1]": {},
              "sub[2]": {},
              "sub[3]": {}
            }
          },
          "mammal": {
            "__sps": {
              "panning": {}
            }
          },
          "river": {
            "__sps": {
              "panning": {},
              "panning[1]": {},
              "panning[2]": {},
              "panning[3]": {},
              "positions": {},
              "unit": {},
              "unit[1]": {},
              "unit[2]": {},
              "unit[3]": {}
            }
          },
          "roomtone": {
            "__sps": {
              "resonBank": {},
              "resonBank[1]": {}
            }
          },
          "swarm": {
            "__sps": {
              "cicada": {},
              "cicada[1]": {},
              "cricket_1": {},
              "cricket_2": {},
              "generic_bug": {},
              "generic_bug[1]": {},
              "housefly": {},
              "new": {},
              "panning": {},
              "panning[1]": {},
              "panning[2]": {},
              "panning[3]": {},
              "panning[4]": {},
              "panning[5]": {},
              "panning[6]": {},
              "positioning": {},
              "triggers": {
                "__sps": {
                  "stochastic": {}
                }
              }
            }
          },
          "swarm[1]": {
            "__sps": {
              "cicada": {},
              "cicada[1]": {},
              "cricket_1": {},
              "cricket_2": {},
              "generic_bug": {},
              "generic_bug[1]": {},
              "housefly": {},
              "new": {},
              "panning": {},
              "panning[1]": {},
              "panning[2]": {},
              "panning[3]": {},
              "panning[4]": {},
              "panning[5]": {},
              "panning[6]": {},
              "positioning": {},
              "triggers": {
                "__sps": {
                  "stochastic": {}
                }
              }
            }
          },
          "verb": {
            "__sps": {
              "reverb": {}
            }
          },
          "wind": {
            "__sps": {
              "panning": {}
            }
          }
        },
        "amp": {
          "value": 0.8
        },
        "flock_amp": {
          "value": 0.9
        },
        "mammal_amp": {
          "value": 0.65
        },
        "river_amp": {
          "value": 0.65
        },
        "room_amp": {
          "value": 0.61
        },
        "swarm_amp": {
          "value": 1
        },
        "wind_amp": {
          "value": 0.85
        }
      }
    }
  ],
  "src": [
    {
      "code": "",
      "compression": "zlib",
      "encoding": "base64",
      "type": "wasm"
    }
  ]
}